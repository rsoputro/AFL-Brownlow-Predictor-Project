
	data {
	  yMean <- mean(y)
	 
	  # Specify the priors for original beta parameters
	  # Prior locations to reflect the expert information
	  # Regression coeffient in LR indicates how much 1 unit of change of the 
	  # predictor increases the log odds of outcome 1.
	  # Set to overall mean a priori based on the interpretation of constant term in regression
	  
	  mu0 <- yMean
	  mu[1] <- 15
	  mu[2] <- 10
	  mu[3] <- 5
	  mu[4] <- 0.7
	  mu[5] <- 0.5
	  mu[6] <- 2
	  mu[7] <- 4
	  mu[8] <- 1
	  mu[9] <- 2
	  mu[10] <- 1
	  mu[11] <- 1.5
	  mu[12] <- 1.3
	  mu[13] <- 1.3
	  mu[14] <- 7
	  mu[15] <- 10
	  mu[16] <- 1
	  mu[17] <- 3
	  mu[18] <- 0.8
	  mu[19] <- 1.5
	  mu[20] <- 0.3
	  mu[21] <- 0.5
	  
	  
	  
	  # Prior Variances to reflect the expert information
	  Var0   <- 1.00000 # Set simply to 1
	  for (i in 1:colCount) {
	    Var[i] <- 0.25
	  }
	}
	# Model
	model {
	  beta0   ~ dnorm(mu0,  1/Var0)
	  for (j in 1:colCount) {
	    beta[j] ~ dnorm(mu[j], 1/Var[j])
	    }
	  
	  
	  # ... Variance as it is ...
	  precision ~ dexp(1/0.25) 
	  
	  for (i in 1:rowCount) {
	  
	    # Normal Likelihood
	    #for (i in 1:rowCount) {
	    #beta0   ~ dnorm(mu0,  1/Var0) + a 
	    y[i] ~ dnorm(beta0 + sum(beta[1:colCount]*x[i,1:colCount]) , precision)
	  }
	    # Compute predictions at every step of the MCMC
  for (k in 1:predCount) {
    pred[k] <- beta0 + sum(beta[1:colCount]*xPred[k,1:colCount])
  }
	}

